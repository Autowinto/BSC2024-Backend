// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// A Meter is the physical Meters in the office that Energinet shows in their API
model PowerReadingArea {
  id           String        @id @unique @default(cuid())
  externalId   Int?          @unique
  devices      Device[]
  deviceGroups DeviceGroup[]
}

model DeviceGroup {
  id                 String            @id @unique @default(cuid())
  devices            Device[]
  name               String            @unique
  PowerReadingArea   PowerReadingArea? @relation(fields: [powerReadingAreaId], references: [id])
  powerReadingAreaId String?
}

model Device {
  id                 String            @id @unique @default(cuid())
  name               String?           @unique
  expectedWattage    Float?
  measuredWattage    Float?
  PowerReadingArea   PowerReadingArea? @relation(fields: [powerReadingAreaId], references: [id])
  powerReadingAreaId String?
  DeviceGroups       DeviceGroup?      @relation(fields: [deviceGroupsId], references: [id])
  deviceGroupsId     String?
  smartPlug          smartPlug[]
}

model smartPlug {
  id                    String                 @id @unique @default(cuid())
  Name                  String                 @unique
  measuredDevice        Device                 @relation(fields: [devicesId], references: [id])
  devicesId             String
  SmartPlugMeasurements SmartPlugMeasurement[]
}

model SmartPlugMeasurement {
  id           String    @id @unique @default(cuid())
  wattage      Float?
  timeMeasured DateTime
  smartPlug    smartPlug @relation(fields: [smartPlugId], references: [id])
  smartPlugId  String
}
