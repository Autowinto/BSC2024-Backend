// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DeviceOnArea {
  id       Int              @id @default(autoincrement())
  count    Int // additional field
  deviceId String
  areaId   String
  Device   Device           @relation(fields: [deviceId], references: [id])
  Area     PowerReadingArea @relation(fields: [areaId], references: [id])

  @@unique([deviceId, areaId])
}

model PowerReadingArea {
  id           String         @id @unique @default(cuid())
  name         String?
  externalId   String         @unique
  DeviceOnArea DeviceOnArea[]
}

model Device {
  id              String         @id @unique @default(cuid())
  name            String         @unique
  description     String?
  expectedWattage Float?
  measuredWattage Float?
  hoursActiveWeek Int
  measurements    Measurement[]
  smartPlug       SmartPlug?
  DeviceOnArea    DeviceOnArea[]
  categoryId      String?
}

model SmartPlug {
  id       String  @id @unique
  name     String  @unique
  device   Device? @relation(fields: [deviceId], references: [id])
  deviceId String? @unique
}

model Measurement {
  id           String   @id @unique @default(cuid())
  wattage      Float
  timeMeasured DateTime
  device       Device   @relation(fields: [deviceId], references: [id])
  deviceId     String
}

model DeviceHourlyAverage {
  id       Int    @id @default(autoincrement())
  deviceId String
}

model DeviceCategory {
  id   String @id @unique @default(cuid())
  name String @unique
}
